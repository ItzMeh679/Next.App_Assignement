.root {
  --bg-primary: #1b1b1b;
  --bg-secondary: #2c2c2c;
  --text-primary: #ffffff;
  --accent-color: #4a4a4a;
  --hover-color: #5c5c5c;
  --glow-color: rgba(255, 102, 0, 0.4);
  --button-bg: rgba(0, 0, 0, 0.4);
  --button-hover-glow: 0 0 20px rgba(255, 140, 0, 0.6);
  --gradient-start: #2c3e50;
  --gradient-end: #3498db;
  --accent-gradient: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
}

.background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: 
    linear-gradient(135deg, #1b1b1b, #2c2c2c),
    url('/9.png') center center / cover no-repeat;
  background-blend-mode: soft-light;
  filter: brightness(0.95) contrast(1.05) blur(1px);
  -webkit-filter: brightness(0.95) contrast(1.05) blur(0.8px);
  background-color: #1b1b1b;
  overflow: hidden;
  z-index: -1;
  transition: all 0.3s ease;
}

.glowEffect {
  position: absolute;
  width: 100vw;
  height: 100vh;
  background: radial-gradient(
    circle, 
    rgba(255, 140, 0, 0.4) 0%, 
    transparent 60%
  );
  pointer-events: none;
  transition: background 0.3s ease-out;
  opacity: 0.6;
}

.counterContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  padding: 1rem;
  animation: fadeIn 0.5s ease-in-out;
  perspective: 1000px;
}

.countDisplay {
  color: #ffffff;
  font-size: clamp(2.5rem, 10vw, 4rem);
  font-weight: bold;
  text-shadow: 0 2px 10px rgba(255, 255, 255, 0.3);
  transition: transform 0.3s ease, text-shadow 0.3s ease;
}

.countDisplay:hover {
  transform: scale(1.05) rotateX(10deg);
  text-shadow: 0 4px 20px rgba(255, 255, 255, 0.5);
}

.buttonContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3rem; /* Increased spacing between buttons */
  margin-top: 4rem;
  width: 100%;
  max-width: 400px;
  padding: 0 1rem;
}

.button {
  width: 100%;
  background: var(--button-bg);
  backdrop-filter: blur(5px);
  color: #ffffff;
  font-size: clamp(1rem, 4vw, 1.25rem);
  padding: 1rem 2.5rem;
  border-radius: 30px;
  cursor: pointer;
  border: 1px solid rgba(255, 255, 255, 0.1);
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
  transform-style: preserve-3d;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 600;
}
.button:hover {
  transform: scale(1.05) translateY(-3px);
  box-shadow: 
    0 15px 25px rgba(37, 117, 252, 0.4),
    0 8px 16px rgba(106, 17, 203, 0.3);
  background: linear-gradient(135deg, #8e2de2 0%, #4a00e0 100%);
}

.button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg, 
    transparent, 
    rgba(255, 255, 255, 0.3), 
    transparent
  );
  transition: all 0.3s ease;
}

.button:hover {
  transform: scale(1.05) rotateX(5deg);
  box-shadow: 
    0 15px 25px rgba(37, 117, 252, 0.4),
    0 8px 16px rgba(106, 17, 203, 0.3);
  background: linear-gradient(135deg, #8e2de2 0%, #4a00e0 100%);
}

.button:active {
  transform: scale(0.98) translateY(2px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

/* Custom Increment Button Specific Styling */
.customIncrementButton {
  background: rgba(0, 0, 0, 0.7);
  border: 2px solid rgba(255, 140, 0, 0.3);
  position: relative;
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
}

.customIncrementButton::before,
.customIncrementButton::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 50%;
  background: linear-gradient(135deg, #ff8c00 0%, #ff4500 100%);
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: -1;
}

.customIncrementButton::before {
  top: 0;
  left: 0;
  transform-origin: top;
  transform: scaleY(0);
}

.customIncrementButton::after {
  bottom: 0;
  left: 0;
  transform-origin: bottom;
  transform: scaleY(0);
}

.customIncrementButton:hover {
  transform: scale(1.05) translateY(-3px);
  background: transparent;
  border-color: rgba(255, 140, 0, 0.6);
  box-shadow: 
    0 0 30px rgba(255, 140, 0, 0.3),
    0 0 60px rgba(255, 140, 0, 0.2);
}

.customIncrementButton:hover::before,
.customIncrementButton:hover::after {
  transform: scaleY(1);
}

.cursorGlow {
  width: 200px;
  height: 200px;
  background: radial-gradient(circle, rgba(255, 140, 0, 0.15) 0%, transparent 70%);
  border-radius: 50%;
  position: fixed;
  pointer-events: none;
  transform: translate(-50%, -50%);
  z-index: 9999;
  transition: opacity 0.3s ease;
}

.glow {
  animation: glowEffect 1s forwards;
}

/* Rest of the CSS remains the same as in the previous artifact */
/* ... (modal styles, media queries, animations) */

/* Cursor Interaction */
.cursorDefault {
  cursor: default;
}

.buttonCursor {
  cursor: pointer;
}

.noUserSelect {
  user-select: none;
}
.button {
  cursor: pointer;
}

.countDisplay {
  user-select: none;
}

/* Responsive Adjustments */
@media screen and (max-width: 768px) {
  .buttonContainer {
    gap: 2.5rem;
    padding: 0 1.5rem;
  }

  .buttonContainer {
    gap: 2rem; /* Consistent spacing on mobile */
    width: 100%;
    max-width: 300px;
  }

  .button {
    padding: 0.875rem 2rem;
  }
}

/* Animations */
@keyframes fadeIn {
  from { 
    opacity: 0;
    transform: translateY(20px);
  }
  to { 
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes glowEffect {
  0% { 
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    transform: scale(1);
  }
  50% { 
    text-shadow: 0 0 20px rgba(255, 255, 255, 1);
    transform: scale(1.05);
  }
  100% { 
    text-shadow: 0 0 0 rgba(255, 255, 255, 0);
    transform: scale(1);
  }
}

.modal {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(10px);
  z-index: 1000;
  padding: 1rem;
}

.modalContent {
  background: linear-gradient(145deg, #2c2c2c, #363636);
  color: #ffffff;
  border-radius: 20px;
  padding: 2.5rem;
  width: 100%;
  max-width: 400px;
  text-align: center;
  box-shadow: 
    0 15px 30px rgba(0, 0, 0, 0.3),
    0 10px 20px rgba(0, 0, 0, 0.2);
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.modalContent label {
  display: block;
  margin-bottom: 1.5rem;
  color: #ffffff;
  font-size: 1.2rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.modalContent input {
  width: 90%;
  padding: 1rem;
  margin: 0 auto 2rem;
  background-color: rgba(60, 60, 60, 0.8);
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  color: #ffffff;
  font-size: 1.1rem;
  text-align: center;
  transition: all 0.3s ease;
  display: block;
}

.modalContent input:focus {
  outline: none;
  border-color: #ff8c00;
  box-shadow: 0 0 20px rgba(255, 140, 0, 0.2);
  transform: translateY(-2px);
}

.modalButtonGroup {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  margin-top: 1rem;
}

.modalButton {
  background: linear-gradient(145deg, #3a3a3a, #2a2a2a);
  color: #ffffff;
  border: none;
  border-radius: 12px;
  padding: 1rem;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
}

.modalButtonIncrease {
  background: linear-gradient(145deg, #2f8a2f, #236923);
  box-shadow: 0 4px 15px rgba(47, 138, 47, 0.3);
}

.modalButtonDecrease {
  background: linear-gradient(145deg, #b33030, #8a2525);
  box-shadow: 0 4px 15px rgba(179, 48, 48, 0.3);
}

.modalClose {
  background: linear-gradient(145deg, #4a4a4a, #3a3a3a);
  grid-column: span 2;
  margin-top: 1rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.modalButton:hover {
  transform: translateY(-3px) scale(1.02);
  filter: brightness(1.1);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
}

.modalButton:active {
  transform: translateY(1px) scale(0.98);
  filter: brightness(0.95);
}

.modalButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: 0.5s;
}

.modalButton:hover::before {
  left: 100%;
}

@media screen and (max-width: 480px) {
  .modalContent {
    width: 90%;
    padding: 2rem;
  }

  .modalContent input {
    width: 100%;
  }

  .modalButtonGroup {
    grid-template-columns: 1fr;
  }

  .modalClose {
    grid-column: span 1;
  }
}